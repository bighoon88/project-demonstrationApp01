{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\workspace\\\\TestExpo\\\\testApp13\\\\components\\\\NoticeDetail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar NoticeDetail = function (_React$Component) {\n  _inherits(NoticeDetail, _React$Component);\n\n  var _super = _createSuper(NoticeDetail);\n\n  function NoticeDetail() {\n    var _this;\n\n    _classCallCheck(this, NoticeDetail);\n\n    _this = _super.call(this);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(NoticeDetail, [{\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      console.log(navigation);\n      var imageUrl = navigation.getParam('imageUrl');\n      var imagePage;\n\n      if (imageUrl === '이미지1') {\n        console.log('이미지1');\n        imagePage = React.createElement(Image, {\n          source: require(\"../images/\\uC774\\uBBF8\\uC9C01.png\"),\n          style: {\n            resizeMode: 'stretch',\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 22\n          }\n        });\n      } else if (imageUrl === '이미지2') {\n        console.log('이미지2');\n        imagePage = React.createElement(Image, {\n          source: require(\"../images/\\uC774\\uBBF8\\uC9C02.jpg\"),\n          style: {\n            resizeMode: 'stretch',\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 22\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'flex-start',\n          backgroundColor: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, imagePage)));\n    }\n  }]);\n\n  return NoticeDetail;\n}(React.Component);\n\nNoticeDetail.navigationOptions = {};\nexport { NoticeDetail as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"sources":["E:/workspace/TestExpo/testApp13/components/NoticeDetail.js"],"names":["React","NoticeDetail","state","navigation","props","console","log","imageUrl","getParam","imagePage","require","resizeMode","width","styles","container","justifyContent","backgroundColor","Component","navigationOptions","StyleSheet","create","flex"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;IAGqBC,Y;;;;;AAKnB,0BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa,EAAb;AAFY;AAIb;;;;6BAIQ;AAAA,UACCC,UADD,GACgB,KAAKC,KADrB,CACCD,UADD;AAEPE,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,UAAMI,QAAQ,GAAGJ,UAAU,CAACK,QAAX,CAAoB,UAApB,CAAjB;AACA,UAAIC,SAAJ;;AACA,UAAIF,QAAQ,KAAK,MAAjB,EAAyB;AACrBF,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAG,QAAAA,SAAS,GAAI,oBAAC,KAAD;AAAO,UAAA,MAAM,EAAEC,OAAO,qCAAtB;AAA8C,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAE,SAAb;AAAwBC,YAAAA,KAAK,EAAE;AAA/B,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACH,OAHD,MAGO,IAAIL,QAAQ,KAAK,MAAjB,EAAyB;AAC5BF,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAG,QAAAA,SAAS,GAAI,oBAAC,KAAD;AAAO,UAAA,MAAM,EAAEC,OAAO,qCAAtB;AAA8C,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAE,SAAb;AAAwBC,YAAAA,KAAK,EAAE;AAA/B,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACH;;AACD,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,cAAc,EAAE,YAAjB;AAA+BC,UAAAA,eAAe,EAAE;AAAhD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCP,SADD,CADJ,CADF,CADF;AASD;;;;EAlCuCT,KAAK,CAACiB,S;;AAA3BhB,Y,CAEZiB,iB,GAAoB,E;SAFRjB,Y;AAqCrB,IAAMY,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETL,IAAAA,eAAe,EAAE;AAFR;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, Image, ScrollView, TouchableOpacity } from 'react-native';\r\n\r\nexport default class NoticeDetail extends React.Component {\r\n\r\n  static navigationOptions = {\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const { navigation } = this.props;\r\n    console.log(navigation)\r\n    const imageUrl = navigation.getParam('imageUrl');\r\n    var imagePage;\r\n    if (imageUrl === '이미지1') {\r\n        console.log('이미지1')\r\n        imagePage = (<Image source={require('../images/이미지1.png')} style={{resizeMode: 'stretch', width: '100%'}}/>)\r\n    } else if (imageUrl === '이미지2') {\r\n        console.log('이미지2')\r\n        imagePage = (<Image source={require('../images/이미지2.jpg')} style={{resizeMode: 'stretch', width: '100%'}}/>)\r\n    }\r\n    return (\r\n      <View style={styles.container}>\r\n        <ScrollView>\r\n            <View style={{justifyContent: 'flex-start', backgroundColor: 'blue'}}>\r\n            {imagePage}\r\n            </View>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}