{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _stateToPropMappings,\n    _jsxFileName = \"E:\\\\workspace\\\\TestExpo\\\\node_modules\\\\react-native-gesture-handler\\\\GestureHandler.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Slider from \"react-native-web/dist/exports/Slider\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToolbarAndroid from \"react-native-web/dist/exports/ToolbarAndroid\";\nimport ViewPagerAndroid from \"react-native-web/dist/exports/ViewPagerAndroid\";\nimport DrawerLayoutAndroid from \"react-native-web/dist/exports/DrawerLayoutAndroid\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport processColor from 'react-native/Libraries/StyleSheet/processColor';\nimport Touchable from 'react-native/Libraries/Components/Touchable/Touchable';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport PropTypes from 'prop-types';\nimport gestureHandlerRootHOC from \"./gestureHandlerRootHOC\";\nvar RNGestureHandlerModule = NativeModules.RNGestureHandlerModule;\nvar UIManager = NativeModules.UIManager;\nvar oldSetJSResponder = UIManager.setJSResponder,\n    oldClearJSResponder = UIManager.clearJSResponder;\n\nUIManager.setJSResponder = function (tag, blockNativeResponder) {\n  RNGestureHandlerModule.handleSetJSResponder(tag, blockNativeResponder);\n  oldSetJSResponder(tag, blockNativeResponder);\n};\n\nUIManager.clearJSResponder = function () {\n  RNGestureHandlerModule.handleClearJSResponder();\n  oldClearJSResponder();\n};\n\nUIManager.genericDirectEventTypes = _objectSpread(_objectSpread({}, UIManager.genericDirectEventTypes), {}, {\n  onGestureHandlerEvent: {\n    registrationName: 'onGestureHandlerEvent'\n  },\n  onGestureHandlerStateChange: {\n    registrationName: 'onGestureHandlerStateChange'\n  }\n});\nvar State = RNGestureHandlerModule.State;\nvar Directions = RNGestureHandlerModule.Direction;\nvar handlerTag = 1;\nvar handlerIDToTag = {};\nvar GestureHandlerPropTypes = {\n  id: PropTypes.string,\n  minPointers: PropTypes.number,\n  enabled: PropTypes.bool,\n  waitFor: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object]))]),\n  simultaneousHandlers: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object]))]),\n  shouldCancelWhenOutside: PropTypes.bool,\n  hitSlop: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    left: PropTypes.number,\n    top: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number,\n    vertical: PropTypes.number,\n    horizontal: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number\n  })]),\n  onGestureEvent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onHandlerStateChange: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onBegan: PropTypes.func,\n  onFailed: PropTypes.func,\n  onCancelled: PropTypes.func,\n  onActivated: PropTypes.func,\n  onEnded: PropTypes.func\n};\nvar stateToPropMappings = (_stateToPropMappings = {}, _defineProperty(_stateToPropMappings, State.BEGAN, 'onBegan'), _defineProperty(_stateToPropMappings, State.FAILED, 'onFailed'), _defineProperty(_stateToPropMappings, State.CANCELLED, 'onCancelled'), _defineProperty(_stateToPropMappings, State.ACTIVE, 'onActivated'), _defineProperty(_stateToPropMappings, State.END, 'onEnded'), _stateToPropMappings);\n\nfunction isConfigParam(param, name) {\n  return param !== undefined && typeof param !== 'function' && (typeof param !== 'object' || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n}\n\nfunction transformIntoHandlerTags(handlerIDs) {\n  if (!Array.isArray(handlerIDs)) {\n    handlerIDs = [handlerIDs];\n  }\n\n  return handlerIDs.map(function (handlerID) {\n    return handlerIDToTag[handlerID] || handlerID.current && handlerID.current._handlerTag || -1;\n  }).filter(function (handlerTag) {\n    return handlerTag > 0;\n  });\n}\n\nfunction filterConfig(props, validProps) {\n  var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var res = _objectSpread({}, defaults);\n\n  Object.keys(validProps).forEach(function (key) {\n    var value = props[key];\n\n    if (isConfigParam(value, key)) {\n      var _value = props[key];\n\n      if (key === 'simultaneousHandlers' || key === 'waitFor') {\n        _value = transformIntoHandlerTags(props[key]);\n      } else if (key === 'hitSlop') {\n        if (typeof _value !== 'object') {\n          _value = {\n            top: _value,\n            left: _value,\n            bottom: _value,\n            right: _value\n          };\n        }\n      }\n\n      res[key] = _value;\n    }\n  });\n  return res;\n}\n\nfunction hasUnresolvedRefs(props) {\n  var extract = function extract(refs) {\n    if (!Array.isArray(refs)) {\n      return refs && refs.current === null;\n    }\n\n    return refs.some(function (r) {\n      return r && r.current === null;\n    });\n  };\n\n  return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n}\n\nfunction createHandler(handlerName) {\n  var propTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var transformProps = arguments.length > 3 ? arguments[3] : undefined;\n  var customNativeProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var Handler = function (_React$Component) {\n    _inherits(Handler, _React$Component);\n\n    var _super = _createSuper(Handler);\n\n    function Handler(props) {\n      var _this;\n\n      _classCallCheck(this, Handler);\n\n      _this = _super.call(this, props);\n\n      _this._onGestureHandlerEvent = function (event) {\n        if (event.nativeEvent.handlerTag === _this._handlerTag) {\n          _this.props.onGestureEvent && _this.props.onGestureEvent(event);\n        } else {\n          _this.props.onGestureHandlerEvent && _this.props.onGestureHandlerEvent(event);\n        }\n      };\n\n      _this._onGestureHandlerStateChange = function (event) {\n        if (event.nativeEvent.handlerTag === _this._handlerTag) {\n          _this.props.onHandlerStateChange && _this.props.onHandlerStateChange(event);\n          var stateEventName = stateToPropMappings[event.nativeEvent.state];\n\n          if (typeof _this.props[stateEventName] === 'function') {\n            _this.props[stateEventName](event);\n          }\n        } else {\n          _this.props.onGestureHandlerStateChange && _this.props.onGestureHandlerStateChange(event);\n        }\n      };\n\n      _this._refHandler = function (node) {\n        _this._viewNode = node;\n        var child = React.Children.only(_this.props.children);\n        var ref = child.ref;\n\n        if (ref !== null) {\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        }\n      };\n\n      _this._handlerTag = handlerTag++;\n      _this._config = {};\n\n      if (props.id) {\n        if (handlerIDToTag[props.id] !== undefined) {\n          throw new Error(\"Handler with ID \\\"\" + props.id + \"\\\" already registered\");\n        }\n\n        handlerIDToTag[props.id] = _this._handlerTag;\n      }\n\n      return _this;\n    }\n\n    _createClass(Handler, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        RNGestureHandlerModule.dropGestureHandler(this._handlerTag);\n\n        if (this._updateEnqueued) {\n          clearImmediate(this._updateEnqueued);\n        }\n\n        if (this.props.id) {\n          delete handlerIDToTag[this.props.id];\n        }\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        this._viewTag = findNodeHandle(this._viewNode);\n        this._config = filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread(_objectSpread({}, this.constructor.propTypes), customNativeProps), config);\n\n        if (hasUnresolvedRefs(this.props)) {\n          this._updateEnqueued = setImmediate(function () {\n            _this2._updateEnqueued = null;\n\n            _this2._update();\n          });\n        }\n\n        RNGestureHandlerModule.createGestureHandler(handlerName, this._handlerTag, this._config);\n        RNGestureHandlerModule.attachGestureHandler(this._handlerTag, this._viewTag);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        var viewTag = findNodeHandle(this._viewNode);\n\n        if (this._viewTag !== viewTag) {\n          this._viewTag = viewTag;\n          RNGestureHandlerModule.attachGestureHandler(this._handlerTag, viewTag);\n        }\n\n        this._update();\n      }\n    }, {\n      key: \"_update\",\n      value: function _update() {\n        var newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread(_objectSpread({}, this.constructor.propTypes), customNativeProps), config);\n\n        if (!deepEqual(this._config, newConfig)) {\n          this._config = newConfig;\n          RNGestureHandlerModule.updateGestureHandler(this._handlerTag, this._config);\n        }\n      }\n    }, {\n      key: \"setNativeProps\",\n      value: function setNativeProps(updates) {\n        var mergedProps = _objectSpread(_objectSpread({}, this.props), updates);\n\n        var newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, _objectSpread(_objectSpread({}, this.constructor.propTypes), customNativeProps), config);\n        this._config = newConfig;\n        RNGestureHandlerModule.updateGestureHandler(this._handlerTag, this._config);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var gestureEventHandler = this._onGestureHandlerEvent;\n        var _this$props = this.props,\n            onGestureEvent = _this$props.onGestureEvent,\n            onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n\n        if (onGestureEvent && typeof onGestureEvent !== 'function') {\n          if (onGestureHandlerEvent) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n\n          gestureEventHandler = this.props.onGestureEvent;\n        } else {\n          if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n\n        var gestureStateEventHandler = this._onGestureHandlerStateChange;\n        var _this$props2 = this.props,\n            onHandlerStateChange = _this$props2.onHandlerStateChange,\n            onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n\n        if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n          if (onGestureHandlerStateChange) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n\n          gestureStateEventHandler = this.props.onHandlerStateChange;\n        } else {\n          if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n\n        var child = React.Children.only(this.props.children);\n        var children = child.props.children;\n\n        if (Touchable.TOUCH_TARGET_DEBUG && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n          children = React.Children.toArray(children);\n          children.push(Touchable.renderDebugView({\n            color: 'mediumspringgreen',\n            hitSlop: child.props.hitSlop\n          }));\n        }\n\n        return React.cloneElement(child, {\n          ref: this._refHandler,\n          collapsable: false,\n          onGestureHandlerEvent: gestureEventHandler,\n          onGestureHandlerStateChange: gestureStateEventHandler\n        }, children);\n      }\n    }]);\n\n    return Handler;\n  }(React.Component);\n\n  Handler.propTypes = _objectSpread(_objectSpread({}, GestureHandlerPropTypes), propTypes);\n  return Handler;\n}\n\nvar NativeViewGestureHandler = createHandler('NativeViewGestureHandler', {\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool\n});\nvar TapGestureHandler = createHandler('TapGestureHandler', {\n  maxDurationMs: PropTypes.number,\n  maxDelayMs: PropTypes.number,\n  numberOfTaps: PropTypes.number,\n  maxDeltaX: PropTypes.number,\n  maxDeltaY: PropTypes.number,\n  maxDist: PropTypes.number,\n  minPointers: PropTypes.number\n}, {});\nvar FlingGestureHandler = createHandler('FlingGestureHandler', {\n  numberOfPointers: PropTypes.number,\n  direction: PropTypes.number\n}, {});\n\nvar ForceTouchFallback = function (_React$Component2) {\n  _inherits(ForceTouchFallback, _React$Component2);\n\n  var _super2 = _createSuper(ForceTouchFallback);\n\n  function ForceTouchFallback() {\n    _classCallCheck(this, ForceTouchFallback);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(ForceTouchFallback, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.warn('ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return ForceTouchFallback;\n}(React.Component);\n\nvar ForceTouchGestureHandler = NativeModules.PlatformConstants.forceTouchAvailable ? createHandler('ForceTouchGestureHandler', {\n  minForce: PropTypes.number,\n  maxForce: PropTypes.number,\n  feedbackOnActivation: PropTypes.bool\n}, {}) : ForceTouchFallback;\nForceTouchGestureHandler.forceTouchAvailable = NativeModules.PlatformConstants.forceTouchAvailable || false;\nvar LongPressGestureHandler = createHandler('LongPressGestureHandler', {\n  minDurationMs: PropTypes.number,\n  maxDist: PropTypes.number\n}, {});\n\nfunction validatePanGestureHandlerProps(props) {\n  if (props.minDeltaX && props.activeOffsetX) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd\");\n  }\n\n  if (props.maxDeltaX && props.failOffsetX) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd\");\n  }\n\n  if (props.minDeltaY && props.activeOffsetY) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd\");\n  }\n\n  if (props.maxDeltaY && props.failOffsetY) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd\");\n  }\n\n  if (Array.isArray(props.activeOffsetX) && (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)) {\n    throw new Error(\"First element of activeOffsetX should be negative, a the second one should be positive\");\n  }\n\n  if (Array.isArray(props.activeOffsetY) && (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)) {\n    throw new Error(\"First element of activeOffsetY should be negative, a the second one should be positive\");\n  }\n\n  if (Array.isArray(props.failOffsetX) && (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)) {\n    throw new Error(\"First element of failOffsetX should be negative, a the second one should be positive\");\n  }\n\n  if (Array.isArray(props.failOffsetY) && (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)) {\n    throw new Error(\"First element of failOffsetY should be negative, a the second one should be positive\");\n  }\n}\n\nfunction transformPanGestureHandlerProps(props) {\n  var res = _objectSpread({}, props);\n\n  if (props.minDeltaX !== undefined) {\n    delete res['minDeltaX'];\n    res.activeOffsetXStart = -props.minDeltaX;\n    res.activeOffsetXEnd = props.minDeltaX;\n  }\n\n  if (props.maxDeltaX !== undefined) {\n    delete res['maxDeltaX'];\n    res.failOffsetXStart = -props.maxDeltaX;\n    res.failOffsetXEnd = props.maxDeltaX;\n  }\n\n  if (props.minOffsetX !== undefined) {\n    delete res['minOffsetX'];\n\n    if (props.minOffsetX < 0) {\n      res.activeOffsetXStart = props.minOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.minOffsetX;\n    }\n  }\n\n  if (props.minDeltaY !== undefined) {\n    delete res['minDeltaY'];\n    res.activeOffsetYStart = -props.minDeltaY;\n    res.activeOffsetYEnd = props.minDeltaY;\n  }\n\n  if (props.maxDeltaY !== undefined) {\n    delete res['maxDeltaY'];\n    res.failOffsetYStart = -props.maxDeltaY;\n    res.failOffsetYEnd = props.maxDeltaY;\n  }\n\n  if (props.minOffsetY !== undefined) {\n    delete res['minOffsetY'];\n\n    if (props.minOffsetY < 0) {\n      res.activeOffsetYStart = props.minOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.minOffsetY;\n    }\n  }\n\n  if (props.activeOffsetX !== undefined) {\n    delete res['activeOffsetX'];\n\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res['activeOffsetY'];\n\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res['failOffsetX'];\n\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res['failOffsetY'];\n\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nfunction managePanProps(props) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n\n  return transformPanGestureHandlerProps(props);\n}\n\nvar PanGestureHandler = createHandler('PanGestureHandler', {\n  activeOffsetY: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  activeOffsetX: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  failOffsetY: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  failOffsetX: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  minDist: PropTypes.number,\n  minVelocity: PropTypes.number,\n  minVelocityX: PropTypes.number,\n  minVelocityY: PropTypes.number,\n  minPointers: PropTypes.number,\n  maxPointers: PropTypes.number,\n  avgTouches: PropTypes.bool\n}, {}, managePanProps, {\n  activeOffsetYStart: true,\n  activeOffsetYEnd: true,\n  activeOffsetXStart: true,\n  activeOffsetXEnd: true,\n  failOffsetYStart: true,\n  failOffsetYEnd: true,\n  failOffsetXStart: true,\n  failOffsetXEnd: true\n});\nvar PinchGestureHandler = createHandler('PinchGestureHandler', {}, {});\nvar RotationGestureHandler = createHandler('RotationGestureHandler', {}, {});\nvar NATIVE_WRAPPER_BIND_BLACKLIST = new Set(['replaceState', 'isMounted']);\n\nvar NATIVE_WRAPPER_PROPS_FILTER = _objectSpread(_objectSpread({}, NativeViewGestureHandler.propTypes), {}, {\n  onGestureHandlerEvent: PropTypes.func,\n  onGestureHandlerStateChange: PropTypes.func\n});\n\nfunction createNativeWrapper(Component) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var ComponentWrapper = function (_React$Component3) {\n    _inherits(ComponentWrapper, _React$Component3);\n\n    var _super3 = _createSuper(ComponentWrapper);\n\n    function ComponentWrapper() {\n      var _this3;\n\n      _classCallCheck(this, ComponentWrapper);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this3 = _super3.call.apply(_super3, [this].concat(args));\n\n      _this3._refHandler = function (node) {\n        var source = node;\n\n        while (source != null) {\n          for (var _iterator = _createForOfIteratorHelperLoose(Object.getOwnPropertyNames(source)), _step; !(_step = _iterator()).done;) {\n            var methodName = _step.value;\n\n            if (!methodName.startsWith('_') && !methodName.startsWith('component') && !NATIVE_WRAPPER_BIND_BLACKLIST.has(methodName) && typeof source[methodName] === 'function' && _this3[methodName] === undefined) {\n              if (source[methodName].prototype) {\n                _this3[methodName] = source[methodName].bind(node);\n              } else {\n                _this3[methodName] = source[methodName];\n              }\n            }\n          }\n\n          source = Object.getPrototypeOf(source);\n        }\n      };\n\n      return _this3;\n    }\n\n    _createClass(ComponentWrapper, [{\n      key: \"render\",\n      value: function render() {\n        var _this4 = this;\n\n        var gestureHandlerProps = Object.keys(this.props).reduce(function (props, key) {\n          if (key in NATIVE_WRAPPER_PROPS_FILTER) {\n            props[key] = _this4.props[key];\n          }\n\n          return props;\n        }, _objectSpread({}, config));\n        return React.createElement(NativeViewGestureHandler, _extends({}, gestureHandlerProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 9\n          }\n        }), React.createElement(Component, _extends({}, this.props, {\n          ref: this._refHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 11\n          }\n        })));\n      }\n    }]);\n\n    return ComponentWrapper;\n  }(React.Component);\n\n  ComponentWrapper.propTypes = _objectSpread({}, Component.propTypes);\n  return ComponentWrapper;\n}\n\nvar WrappedScrollView = createNativeWrapper(ScrollView, {\n  disallowInterruption: true\n});\nvar WrappedSlider = createNativeWrapper(Slider, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true\n});\nvar WrappedSwitch = createNativeWrapper(Switch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true\n});\nvar WrappedTextInput = createNativeWrapper(TextInput);\nvar WrappedToolbarAndroid = createNativeWrapper(ToolbarAndroid);\nvar WrappedViewPagerAndroid = createNativeWrapper(ViewPagerAndroid, {\n  disallowInterruption: true\n});\nvar WrappedDrawerLayoutAndroid = createNativeWrapper(DrawerLayoutAndroid, {\n  disallowInterruption: true\n});\nWrappedDrawerLayoutAndroid.positions = DrawerLayoutAndroid.positions;\n\nState.print = function (state) {\n  var keys = Object.keys(State);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (state === State[keys[i]]) {\n      return keys[i];\n    }\n  }\n};\n\nvar RawButton = createNativeWrapper(requireNativeComponent('RNGestureHandlerButton', null), {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false\n});\n\nvar BaseButton = function (_React$Component4) {\n  _inherits(BaseButton, _React$Component4);\n\n  var _super4 = _createSuper(BaseButton);\n\n  function BaseButton(props) {\n    var _this5;\n\n    _classCallCheck(this, BaseButton);\n\n    _this5 = _super4.call(this, props);\n\n    _this5._handleEvent = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var state = nativeEvent.state,\n          oldState = nativeEvent.oldState,\n          pointerInside = nativeEvent.pointerInside;\n      var active = pointerInside && state === State.ACTIVE;\n\n      if (active !== _this5._lastActive && _this5.props.onActiveStateChange) {\n        _this5.props.onActiveStateChange(active);\n      }\n\n      if (oldState === State.ACTIVE && state !== State.CANCELLED && _this5._lastActive && _this5.props.onPress) {\n        _this5.props.onPress(active);\n      }\n\n      _this5._lastActive = active;\n    };\n\n    _this5._onHandlerStateChange = function (e) {\n      _this5.props.onHandlerStateChange && _this5.props.onHandlerStateChange(e);\n\n      _this5._handleEvent(e);\n    };\n\n    _this5._onGestureEvent = function (e) {\n      _this5.props.onGestureEvent && _this5.props.onGestureEvent(e);\n\n      _this5._handleEvent(e);\n    };\n\n    _this5._lastActive = false;\n    return _this5;\n  }\n\n  _createClass(BaseButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          style = _this$props3.style,\n          rippleColor = _this$props3.rippleColor,\n          rest = _objectWithoutProperties(_this$props3, [\"style\", \"rippleColor\"]);\n\n      return React.createElement(RawButton, _extends({\n        style: [{\n          overflow: 'hidden'\n        }, style],\n        rippleColor: processColor(rippleColor)\n      }, rest, {\n        onGestureEvent: this._onGestureEvent,\n        onHandlerStateChange: this._onHandlerStateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return BaseButton;\n}(React.Component);\n\nBaseButton.propTypes = _objectSpread(_objectSpread({}, RawButton.propTypes), {}, {\n  onPress: PropTypes.func,\n  onActiveStateChange: PropTypes.func\n});\nvar AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\nvar btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0\n  }\n});\n\nvar RectButton = function (_React$Component5) {\n  _inherits(RectButton, _React$Component5);\n\n  var _super5 = _createSuper(RectButton);\n\n  function RectButton(props) {\n    var _this6;\n\n    _classCallCheck(this, RectButton);\n\n    _this6 = _super5.call(this, props);\n\n    _this6._onActiveStateChange = function (active) {\n      if (Platform.OS !== 'android') {\n        _this6._opacity.setValue(active ? _this6.props.activeOpacity : 0);\n      }\n\n      _this6.props.onActiveStateChange && _this6.props.onActiveStateChange(active);\n    };\n\n    _this6._opacity = new Animated.Value(0);\n    return _this6;\n  }\n\n  _createClass(RectButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          rest = _objectWithoutProperties(_this$props4, [\"children\"]);\n\n      return React.createElement(BaseButton, _extends({}, rest, {\n        onActiveStateChange: this._onActiveStateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 7\n        }\n      }), React.createElement(Animated.View, {\n        style: [btnStyles.underlay, {\n          opacity: this._opacity\n        }, {\n          backgroundColor: this.props.underlayColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 9\n        }\n      }), children);\n    }\n  }]);\n\n  return RectButton;\n}(React.Component);\n\nRectButton.propTypes = BaseButton.propTypes;\nRectButton.defaultProps = {\n  activeOpacity: 0.105,\n  underlayColor: 'black'\n};\n\nvar BorderlessButton = function (_React$Component6) {\n  _inherits(BorderlessButton, _React$Component6);\n\n  var _super6 = _createSuper(BorderlessButton);\n\n  function BorderlessButton(props) {\n    var _this7;\n\n    _classCallCheck(this, BorderlessButton);\n\n    _this7 = _super6.call(this, props);\n\n    _this7._onActiveStateChange = function (active) {\n      if (Platform.OS !== 'android') {\n        _this7._opacity.setValue(active ? _this7.props.activeOpacity : 1);\n      }\n\n      _this7.props.onActiveStateChange && _this7.props.onActiveStateChange(active);\n    };\n\n    _this7._opacity = new Animated.Value(1);\n    return _this7;\n  }\n\n  _createClass(BorderlessButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          style = _this$props5.style,\n          rest = _objectWithoutProperties(_this$props5, [\"children\", \"style\"]);\n\n      return React.createElement(AnimatedBaseButton, _extends({}, rest, {\n        onActiveStateChange: this._onActiveStateChange,\n        style: [style, Platform.OS === 'ios' && {\n          opacity: this._opacity\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 7\n        }\n      }), children);\n    }\n  }]);\n\n  return BorderlessButton;\n}(React.Component);\n\nBorderlessButton.propTypes = _objectSpread(_objectSpread({}, BaseButton.propTypes), {}, {\n  borderless: PropTypes.bool\n});\nBorderlessButton.defaultProps = {\n  activeOpacity: 0.3,\n  borderless: true\n};\n\nvar FlatListWithGHScroll = function FlatListWithGHScroll(props) {\n  return React.createElement(FlatList, _extends({}, props, {\n    renderScrollComponent: function renderScrollComponent(props) {\n      return React.createElement(WrappedScrollView, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 37\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 3\n    }\n  }));\n};\n\nexport { WrappedScrollView as ScrollView, WrappedSlider as Slider, WrappedSwitch as Switch, WrappedTextInput as TextInput, WrappedToolbarAndroid as ToolbarAndroid, WrappedViewPagerAndroid as ViewPagerAndroid, WrappedDrawerLayoutAndroid as DrawerLayoutAndroid, NativeViewGestureHandler, TapGestureHandler, FlingGestureHandler, ForceTouchGestureHandler, LongPressGestureHandler, PanGestureHandler, PinchGestureHandler, RotationGestureHandler, State, RawButton, BaseButton, RectButton, BorderlessButton, FlatListWithGHScroll as FlatList, gestureHandlerRootHOC, Directions };","map":{"version":3,"sources":["E:/workspace/TestExpo/node_modules/react-native-gesture-handler/GestureHandler.js"],"names":["React","requireNativeComponent","processColor","Touchable","deepEqual","PropTypes","gestureHandlerRootHOC","RNGestureHandlerModule","NativeModules","UIManager","oldSetJSResponder","setJSResponder","oldClearJSResponder","clearJSResponder","tag","blockNativeResponder","handleSetJSResponder","handleClearJSResponder","genericDirectEventTypes","onGestureHandlerEvent","registrationName","onGestureHandlerStateChange","State","Directions","Direction","handlerTag","handlerIDToTag","GestureHandlerPropTypes","id","string","minPointers","number","enabled","bool","waitFor","oneOfType","object","arrayOf","simultaneousHandlers","shouldCancelWhenOutside","hitSlop","shape","left","top","right","bottom","vertical","horizontal","width","height","onGestureEvent","func","onHandlerStateChange","onBegan","onFailed","onCancelled","onActivated","onEnded","stateToPropMappings","BEGAN","FAILED","CANCELLED","ACTIVE","END","isConfigParam","param","name","undefined","transformIntoHandlerTags","handlerIDs","Array","isArray","map","handlerID","current","_handlerTag","filter","filterConfig","props","validProps","defaults","res","Object","keys","forEach","key","value","hasUnresolvedRefs","extract","refs","some","r","createHandler","handlerName","propTypes","config","transformProps","customNativeProps","Handler","_onGestureHandlerEvent","event","nativeEvent","_onGestureHandlerStateChange","stateEventName","state","_refHandler","node","_viewNode","child","Children","only","children","ref","_config","Error","dropGestureHandler","_updateEnqueued","clearImmediate","_viewTag","findNodeHandle","constructor","setImmediate","_update","createGestureHandler","attachGestureHandler","viewTag","newConfig","updateGestureHandler","updates","mergedProps","gestureEventHandler","gestureStateEventHandler","TOUCH_TARGET_DEBUG","type","displayName","toArray","push","renderDebugView","color","cloneElement","collapsable","Component","NativeViewGestureHandler","shouldActivateOnStart","disallowInterruption","TapGestureHandler","maxDurationMs","maxDelayMs","numberOfTaps","maxDeltaX","maxDeltaY","maxDist","FlingGestureHandler","numberOfPointers","direction","ForceTouchFallback","console","warn","ForceTouchGestureHandler","PlatformConstants","forceTouchAvailable","minForce","maxForce","feedbackOnActivation","LongPressGestureHandler","minDurationMs","validatePanGestureHandlerProps","minDeltaX","activeOffsetX","failOffsetX","minDeltaY","activeOffsetY","failOffsetY","transformPanGestureHandlerProps","activeOffsetXStart","activeOffsetXEnd","failOffsetXStart","failOffsetXEnd","minOffsetX","activeOffsetYStart","activeOffsetYEnd","failOffsetYStart","failOffsetYEnd","minOffsetY","managePanProps","__DEV__","PanGestureHandler","minDist","minVelocity","minVelocityX","minVelocityY","maxPointers","avgTouches","PinchGestureHandler","RotationGestureHandler","NATIVE_WRAPPER_BIND_BLACKLIST","Set","NATIVE_WRAPPER_PROPS_FILTER","createNativeWrapper","ComponentWrapper","source","getOwnPropertyNames","methodName","startsWith","has","prototype","bind","getPrototypeOf","gestureHandlerProps","reduce","WrappedScrollView","ScrollView","WrappedSlider","Slider","WrappedSwitch","Switch","WrappedTextInput","TextInput","WrappedToolbarAndroid","ToolbarAndroid","WrappedViewPagerAndroid","ViewPagerAndroid","WrappedDrawerLayoutAndroid","DrawerLayoutAndroid","positions","print","i","length","RawButton","BaseButton","_handleEvent","oldState","pointerInside","active","_lastActive","onActiveStateChange","onPress","_onHandlerStateChange","e","_onGestureEvent","style","rippleColor","rest","overflow","AnimatedBaseButton","Animated","createAnimatedComponent","btnStyles","StyleSheet","create","underlay","position","RectButton","_onActiveStateChange","Platform","OS","_opacity","setValue","activeOpacity","Value","opacity","backgroundColor","underlayColor","defaultProps","BorderlessButton","borderless","FlatListWithGHScroll","FlatList"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  findNodeHandle,\n  requireNativeComponent,\n  Animated,\n  NativeModules,\n  ScrollView,\n  Slider,\n  Switch,\n  TextInput,\n  ToolbarAndroid,\n  ViewPagerAndroid,\n  DrawerLayoutAndroid,\n  StyleSheet,\n  FlatList,\n  Platform,\n} from 'react-native';\nimport processColor from 'react-native/Libraries/StyleSheet/processColor';\nimport Touchable from 'react-native/Libraries/Components/Touchable/Touchable';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport PropTypes from 'prop-types';\n\nimport gestureHandlerRootHOC from './gestureHandlerRootHOC';\n\nconst RNGestureHandlerModule = NativeModules.RNGestureHandlerModule;\n\n/* Wrap JS responder calls and notify gesture handler manager */\nconst { UIManager } = NativeModules;\nconst {\n  setJSResponder: oldSetJSResponder,\n  clearJSResponder: oldClearJSResponder,\n} = UIManager;\nUIManager.setJSResponder = (tag, blockNativeResponder) => {\n  RNGestureHandlerModule.handleSetJSResponder(tag, blockNativeResponder);\n  oldSetJSResponder(tag, blockNativeResponder);\n};\nUIManager.clearJSResponder = () => {\n  RNGestureHandlerModule.handleClearJSResponder();\n  oldClearJSResponder();\n};\n\n// Add gesture specific events to genericDirectEventTypes object exported from UIManager\n// native module.\n// Once new event types are registered with react it is possible to dispatch these\n// events to all kind of native views.\nUIManager.genericDirectEventTypes = {\n  ...UIManager.genericDirectEventTypes,\n  onGestureHandlerEvent: { registrationName: 'onGestureHandlerEvent' },\n  onGestureHandlerStateChange: {\n    registrationName: 'onGestureHandlerStateChange',\n  },\n};\n\nconst State = RNGestureHandlerModule.State;\n\nconst Directions = RNGestureHandlerModule.Direction;\n\nlet handlerTag = 1;\nconst handlerIDToTag = {};\n\nconst GestureHandlerPropTypes = {\n  id: PropTypes.string,\n  minPointers: PropTypes.number,\n  enabled: PropTypes.bool,\n  waitFor: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  simultaneousHandlers: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  shouldCancelWhenOutside: PropTypes.bool,\n  hitSlop: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      left: PropTypes.number,\n      top: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n      vertical: PropTypes.number,\n      horizontal: PropTypes.number,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ]),\n  onGestureEvent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onHandlerStateChange: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onBegan: PropTypes.func,\n  onFailed: PropTypes.func,\n  onCancelled: PropTypes.func,\n  onActivated: PropTypes.func,\n  onEnded: PropTypes.func,\n};\n\nconst stateToPropMappings = {\n  [State.BEGAN]: 'onBegan',\n  [State.FAILED]: 'onFailed',\n  [State.CANCELLED]: 'onCancelled',\n  [State.ACTIVE]: 'onActivated',\n  [State.END]: 'onEnded',\n};\n\nfunction isConfigParam(param, name) {\n  return (\n    param !== undefined &&\n    typeof param !== 'function' &&\n    (typeof param !== 'object' || !('__isNative' in param)) &&\n    name !== 'onHandlerStateChange' &&\n    name !== 'onGestureEvent'\n  );\n}\n\nfunction transformIntoHandlerTags(handlerIDs) {\n  if (!Array.isArray(handlerIDs)) {\n    handlerIDs = [handlerIDs];\n  }\n\n  // converts handler string IDs into their numeric tags\n  return handlerIDs\n    .map(\n      handlerID =>\n        handlerIDToTag[handlerID] ||\n        (handlerID.current && handlerID.current._handlerTag) ||\n        -1\n    )\n    .filter(handlerTag => handlerTag > 0);\n}\n\nfunction filterConfig(props, validProps, defaults = {}) {\n  const res = { ...defaults };\n  Object.keys(validProps).forEach(key => {\n    const value = props[key];\n    if (isConfigParam(value, key)) {\n      let value = props[key];\n      if (key === 'simultaneousHandlers' || key === 'waitFor') {\n        value = transformIntoHandlerTags(props[key]);\n      } else if (key === 'hitSlop') {\n        if (typeof value !== 'object') {\n          value = { top: value, left: value, bottom: value, right: value };\n        }\n      }\n      res[key] = value;\n    }\n  });\n  return res;\n}\n\nfunction hasUnresolvedRefs(props) {\n  const extract = refs => {\n    if (!Array.isArray(refs)) {\n      return refs && refs.current === null;\n    }\n    return refs.some(r => r && r.current === null);\n  };\n  return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n}\n\nfunction createHandler(\n  handlerName,\n  propTypes = null,\n  config = {},\n  transformProps,\n  customNativeProps = {}\n) {\n  class Handler extends React.Component {\n    static propTypes = {\n      ...GestureHandlerPropTypes,\n      ...propTypes,\n    };\n\n    constructor(props) {\n      super(props);\n      this._handlerTag = handlerTag++;\n      this._config = {};\n      if (props.id) {\n        if (handlerIDToTag[props.id] !== undefined) {\n          throw new Error(`Handler with ID \"${props.id}\" already registered`);\n        }\n        handlerIDToTag[props.id] = this._handlerTag;\n      }\n    }\n\n    _onGestureHandlerEvent = event => {\n      if (event.nativeEvent.handlerTag === this._handlerTag) {\n        this.props.onGestureEvent && this.props.onGestureEvent(event);\n      } else {\n        this.props.onGestureHandlerEvent &&\n          this.props.onGestureHandlerEvent(event);\n      }\n    };\n\n    _onGestureHandlerStateChange = event => {\n      if (event.nativeEvent.handlerTag === this._handlerTag) {\n        this.props.onHandlerStateChange &&\n          this.props.onHandlerStateChange(event);\n\n        const stateEventName = stateToPropMappings[event.nativeEvent.state];\n        if (typeof this.props[stateEventName] === 'function') {\n          this.props[stateEventName](event);\n        }\n      } else {\n        this.props.onGestureHandlerStateChange &&\n          this.props.onGestureHandlerStateChange(event);\n      }\n    };\n\n    _refHandler = node => {\n      this._viewNode = node;\n\n      const child = React.Children.only(this.props.children);\n      const { ref } = child;\n      if (ref !== null) {\n        if (typeof ref === 'function') {\n          ref(node);\n        } else {\n          ref.current = node;\n        }\n      }\n    };\n\n    componentWillUnmount() {\n      RNGestureHandlerModule.dropGestureHandler(this._handlerTag);\n      if (this._updateEnqueued) {\n        clearImmediate(this._updateEnqueued);\n      }\n      if (this.props.id) {\n        delete handlerIDToTag[this.props.id];\n      }\n    }\n\n    componentDidMount() {\n      this._viewTag = findNodeHandle(this._viewNode);\n      this._config = filterConfig(\n        transformProps ? transformProps(this.props) : this.props,\n        { ...this.constructor.propTypes, ...customNativeProps },\n        config\n      );\n      if (hasUnresolvedRefs(this.props)) {\n        // If there are unresolved refs (e.g. \".current\" has not yet been set)\n        // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n        // _update method that will try to update native handler props using\n        // setImmediate. This makes it so _update function gets called after all\n        // react components are mounted and we expect the missing ref object to\n        // be resolved by then.\n        this._updateEnqueued = setImmediate(() => {\n          this._updateEnqueued = null;\n          this._update();\n        });\n      }\n      RNGestureHandlerModule.createGestureHandler(\n        handlerName,\n        this._handlerTag,\n        this._config\n      );\n      RNGestureHandlerModule.attachGestureHandler(\n        this._handlerTag,\n        this._viewTag\n      );\n    }\n\n    componentDidUpdate() {\n      const viewTag = findNodeHandle(this._viewNode);\n      if (this._viewTag !== viewTag) {\n        this._viewTag = viewTag;\n        RNGestureHandlerModule.attachGestureHandler(this._handlerTag, viewTag);\n      }\n      this._update();\n    }\n\n    _update() {\n      const newConfig = filterConfig(\n        transformProps ? transformProps(this.props) : this.props,\n        { ...this.constructor.propTypes, ...customNativeProps },\n        config\n      );\n      if (!deepEqual(this._config, newConfig)) {\n        this._config = newConfig;\n        RNGestureHandlerModule.updateGestureHandler(\n          this._handlerTag,\n          this._config\n        );\n      }\n    }\n\n    setNativeProps(updates) {\n      const mergedProps = { ...this.props, ...updates };\n      const newConfig = filterConfig(\n        transformProps ? transformProps(mergedProps) : mergedProps,\n        { ...this.constructor.propTypes, ...customNativeProps },\n        config\n      );\n      this._config = newConfig;\n      RNGestureHandlerModule.updateGestureHandler(\n        this._handlerTag,\n        this._config\n      );\n    }\n\n    render() {\n      let gestureEventHandler = this._onGestureHandlerEvent;\n      const { onGestureEvent, onGestureHandlerEvent } = this.props;\n      if (onGestureEvent && typeof onGestureEvent !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerEvent) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureEventHandler = this.props.onGestureEvent;\n      } else {\n        if (\n          onGestureHandlerEvent &&\n          typeof onGestureHandlerEvent !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n\n      let gestureStateEventHandler = this._onGestureHandlerStateChange;\n      const { onHandlerStateChange, onGestureHandlerStateChange } = this.props;\n      if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerStateChange) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureStateEventHandler = this.props.onHandlerStateChange;\n      } else {\n        if (\n          onGestureHandlerStateChange &&\n          typeof onGestureHandlerStateChange !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n\n      const child = React.Children.only(this.props.children);\n      let children = child.props.children;\n      if (\n        Touchable.TOUCH_TARGET_DEBUG &&\n        child.type &&\n        (child.type === 'RNGestureHandlerButton' ||\n          child.type.name === 'View' ||\n          child.type.displayName === 'View')\n      ) {\n        children = React.Children.toArray(children);\n        children.push(\n          Touchable.renderDebugView({\n            color: 'mediumspringgreen',\n            hitSlop: child.props.hitSlop,\n          })\n        );\n      }\n      return React.cloneElement(\n        child,\n        {\n          ref: this._refHandler,\n          collapsable: false,\n          onGestureHandlerEvent: gestureEventHandler,\n          onGestureHandlerStateChange: gestureStateEventHandler,\n        },\n        children\n      );\n    }\n  }\n  return Handler;\n}\n\nconst NativeViewGestureHandler = createHandler('NativeViewGestureHandler', {\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool,\n});\nconst TapGestureHandler = createHandler(\n  'TapGestureHandler',\n  {\n    maxDurationMs: PropTypes.number,\n    maxDelayMs: PropTypes.number,\n    numberOfTaps: PropTypes.number,\n    maxDeltaX: PropTypes.number,\n    maxDeltaY: PropTypes.number,\n    maxDist: PropTypes.number,\n    minPointers: PropTypes.number,\n  },\n  {}\n);\n\nconst FlingGestureHandler = createHandler(\n  'FlingGestureHandler',\n  {\n    numberOfPointers: PropTypes.number,\n    direction: PropTypes.number,\n  },\n  {}\n);\n\nclass ForceTouchFallback extends React.Component {\n  componentDidMount() {\n    console.warn(\n      'ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase'\n    );\n  }\n  render() {\n    return this.props.children;\n  }\n}\n\nconst ForceTouchGestureHandler = NativeModules.PlatformConstants\n  .forceTouchAvailable\n  ? createHandler(\n      'ForceTouchGestureHandler',\n      {\n        minForce: PropTypes.number,\n        maxForce: PropTypes.number,\n        feedbackOnActivation: PropTypes.bool,\n      },\n      {}\n    )\n  : ForceTouchFallback;\n\nForceTouchGestureHandler.forceTouchAvailable =\n  NativeModules.PlatformConstants.forceTouchAvailable || false;\n\nconst LongPressGestureHandler = createHandler(\n  'LongPressGestureHandler',\n  {\n    minDurationMs: PropTypes.number,\n    maxDist: PropTypes.number,\n  },\n  {}\n);\n\nfunction validatePanGestureHandlerProps(props) {\n  if (props.minDeltaX && props.activeOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.maxDeltaX && props.failOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.minDeltaY && props.activeOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (props.maxDeltaY && props.failOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (\n    Array.isArray(props.activeOffsetX) &&\n    (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.activeOffsetY) &&\n    (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetY should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetX) &&\n    (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetY) &&\n    (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetY should be negative, a the second one should be positive`\n    );\n  }\n}\n\nfunction transformPanGestureHandlerProps(props) {\n  const res = { ...props };\n  if (props.minDeltaX !== undefined) {\n    delete res['minDeltaX'];\n    res.activeOffsetXStart = -props.minDeltaX;\n    res.activeOffsetXEnd = props.minDeltaX;\n  }\n  if (props.maxDeltaX !== undefined) {\n    delete res['maxDeltaX'];\n    res.failOffsetXStart = -props.maxDeltaX;\n    res.failOffsetXEnd = props.maxDeltaX;\n  }\n  if (props.minOffsetX !== undefined) {\n    delete res['minOffsetX'];\n    if (props.minOffsetX < 0) {\n      res.activeOffsetXStart = props.minOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.minOffsetX;\n    }\n  }\n\n  if (props.minDeltaY !== undefined) {\n    delete res['minDeltaY'];\n    res.activeOffsetYStart = -props.minDeltaY;\n    res.activeOffsetYEnd = props.minDeltaY;\n  }\n  if (props.maxDeltaY !== undefined) {\n    delete res['maxDeltaY'];\n    res.failOffsetYStart = -props.maxDeltaY;\n    res.failOffsetYEnd = props.maxDeltaY;\n  }\n\n  if (props.minOffsetY !== undefined) {\n    delete res['minOffsetY'];\n    if (props.minOffsetY < 0) {\n      res.activeOffsetYStart = props.minOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.minOffsetY;\n    }\n  }\n\n  if (props.activeOffsetX !== undefined) {\n    delete res['activeOffsetX'];\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res['activeOffsetY'];\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res['failOffsetX'];\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res['failOffsetY'];\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nfunction managePanProps(props) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n  return transformPanGestureHandlerProps(props);\n}\n\nconst PanGestureHandler = createHandler(\n  'PanGestureHandler',\n  {\n    activeOffsetY: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    activeOffsetX: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    failOffsetY: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    failOffsetX: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    minDist: PropTypes.number,\n    minVelocity: PropTypes.number,\n    minVelocityX: PropTypes.number,\n    minVelocityY: PropTypes.number,\n    minPointers: PropTypes.number,\n    maxPointers: PropTypes.number,\n    avgTouches: PropTypes.bool,\n  },\n  {},\n  managePanProps,\n  {\n    activeOffsetYStart: true,\n    activeOffsetYEnd: true,\n    activeOffsetXStart: true,\n    activeOffsetXEnd: true,\n    failOffsetYStart: true,\n    failOffsetYEnd: true,\n    failOffsetXStart: true,\n    failOffsetXEnd: true,\n  }\n);\nconst PinchGestureHandler = createHandler('PinchGestureHandler', {}, {});\nconst RotationGestureHandler = createHandler('RotationGestureHandler', {}, {});\n\nconst NATIVE_WRAPPER_BIND_BLACKLIST = new Set(['replaceState', 'isMounted']);\nconst NATIVE_WRAPPER_PROPS_FILTER = {\n  // accept all gesture handler prop types plus native wrapper specific ones\n  ...NativeViewGestureHandler.propTypes,\n  // we want to pass gesture event handlers if registered\n  onGestureHandlerEvent: PropTypes.func,\n  onGestureHandlerStateChange: PropTypes.func,\n};\n\nfunction createNativeWrapper(Component, config = {}) {\n  class ComponentWrapper extends React.Component {\n    static propTypes = {\n      ...Component.propTypes,\n    };\n\n    _refHandler = node => {\n      // bind native component's methods\n      let source = node;\n      while (source != null) {\n        for (let methodName of Object.getOwnPropertyNames(source)) {\n          if (\n            !methodName.startsWith('_') && // private methods\n            !methodName.startsWith('component') && // lifecycle methods\n            !NATIVE_WRAPPER_BIND_BLACKLIST.has(methodName) && // other\n            typeof source[methodName] === 'function' &&\n            this[methodName] === undefined\n          ) {\n            if (source[methodName].prototype) {\n              // determine if it's not bound already\n              this[methodName] = source[methodName].bind(node);\n            } else {\n              this[methodName] = source[methodName];\n            }\n          }\n        }\n        source = Object.getPrototypeOf(source);\n      }\n    };\n\n    render() {\n      // filter out props that should be passed to gesture handler wrapper\n      const gestureHandlerProps = Object.keys(this.props).reduce(\n        (props, key) => {\n          if (key in NATIVE_WRAPPER_PROPS_FILTER) {\n            props[key] = this.props[key];\n          }\n          return props;\n        },\n        { ...config } // watch out not to modify config\n      );\n      return (\n        <NativeViewGestureHandler {...gestureHandlerProps}>\n          <Component {...this.props} ref={this._refHandler} />\n        </NativeViewGestureHandler>\n      );\n    }\n  }\n  return ComponentWrapper;\n}\n\nconst WrappedScrollView = createNativeWrapper(ScrollView, {\n  disallowInterruption: true,\n});\nconst WrappedSlider = createNativeWrapper(Slider, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nconst WrappedSwitch = createNativeWrapper(Switch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nconst WrappedTextInput = createNativeWrapper(TextInput);\n\nconst WrappedToolbarAndroid = createNativeWrapper(ToolbarAndroid);\nconst WrappedViewPagerAndroid = createNativeWrapper(ViewPagerAndroid, {\n  disallowInterruption: true,\n});\nconst WrappedDrawerLayoutAndroid = createNativeWrapper(DrawerLayoutAndroid, {\n  disallowInterruption: true,\n});\nWrappedDrawerLayoutAndroid.positions = DrawerLayoutAndroid.positions;\n\nState.print = state => {\n  const keys = Object.keys(State);\n  for (let i = 0; i < keys.length; i++) {\n    if (state === State[keys[i]]) {\n      return keys[i];\n    }\n  }\n};\n\nconst RawButton = createNativeWrapper(\n  requireNativeComponent('RNGestureHandlerButton', null),\n  {\n    shouldCancelWhenOutside: false,\n    shouldActivateOnStart: false,\n  }\n);\n\n/* Buttons */\n\nclass BaseButton extends React.Component {\n  static propTypes = {\n    ...RawButton.propTypes,\n    onPress: PropTypes.func,\n    onActiveStateChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this._lastActive = false;\n  }\n\n  _handleEvent = ({ nativeEvent }) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this._lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this._lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(active);\n    }\n\n    this._lastActive = active;\n  };\n\n  // Normally, the parent would execute it's handler first,\n  // then forward the event to listeners. However, here our handler\n  // is virtually only forwarding events to listeners, so we reverse the order\n  // to keep the proper order of the callbacks (from \"raw\" ones to \"processed\").\n  _onHandlerStateChange = e => {\n    this.props.onHandlerStateChange && this.props.onHandlerStateChange(e);\n    this._handleEvent(e);\n  };\n\n  _onGestureEvent = e => {\n    this.props.onGestureEvent && this.props.onGestureEvent(e);\n    this._handleEvent(e);\n  };\n\n  render() {\n    const { style, rippleColor, ...rest } = this.props;\n\n    return (\n      <RawButton\n        style={[{ overflow: 'hidden' }, style]}\n        rippleColor={processColor(rippleColor)}\n        {...rest}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}\n      />\n    );\n  }\n}\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nclass RectButton extends React.Component {\n  static propTypes = BaseButton.propTypes;\n\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(0);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 0);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, ...rest } = this.props;\n\n    return (\n      <BaseButton {...rest} onActiveStateChange={this._onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            { opacity: this._opacity },\n            { backgroundColor: this.props.underlayColor },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nclass BorderlessButton extends React.Component {\n  static propTypes = {\n    ...BaseButton.propTypes,\n    borderless: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(1);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 1);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this._onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this._opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\n/* Other */\n\nconst FlatListWithGHScroll = props => (\n  <FlatList\n    {...props}\n    renderScrollComponent={props => <WrappedScrollView {...props} />}\n  />\n);\n\nexport {\n  WrappedScrollView as ScrollView,\n  WrappedSlider as Slider,\n  WrappedSwitch as Switch,\n  WrappedTextInput as TextInput,\n  WrappedToolbarAndroid as ToolbarAndroid,\n  WrappedViewPagerAndroid as ViewPagerAndroid,\n  WrappedDrawerLayoutAndroid as DrawerLayoutAndroid,\n  NativeViewGestureHandler,\n  TapGestureHandler,\n  FlingGestureHandler,\n  ForceTouchGestureHandler,\n  LongPressGestureHandler,\n  PanGestureHandler,\n  PinchGestureHandler,\n  RotationGestureHandler,\n  State,\n  /* Buttons */\n  RawButton,\n  BaseButton,\n  RectButton,\n  BorderlessButton,\n  /* Other */\n  FlatListWithGHScroll as FlatList,\n  gestureHandlerRootHOC,\n  Directions,\n};\n"]},"metadata":{},"sourceType":"module"}