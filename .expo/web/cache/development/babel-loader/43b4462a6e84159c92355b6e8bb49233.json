{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\workspace\\\\TestExpo\\\\testApp13\\\\components\\\\LoadingScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport firebase from 'firebase';\n\nvar LoadingScreen = function (_React$Component) {\n  _inherits(LoadingScreen, _React$Component);\n\n  var _super = _createSuper(LoadingScreen);\n\n  function LoadingScreen() {\n    var _this;\n\n    _classCallCheck(this, LoadingScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      currentUser: null\n    };\n\n    _this.checkIfLoggedIn = function () {\n      firebase.auth().onAuthStateChanged(function (user) {\n        console.log('checkIfLoggedIn first');\n\n        if (user) {\n          var isLogin = true;\n\n          var _firebase$auth = firebase.auth(),\n              currentUser = _firebase$auth.currentUser;\n\n          this.setState({\n            currentUser: currentUser\n          });\n          console.log('currentUser.uid');\n          console.log(currentUser.uid);\n          this.props.navigation.navigate('DashboardScreen', {\n            displayName: currentUser.displayName,\n            email: currentUser.email,\n            isLogin: isLogin\n          });\n        } else {\n          var _isLogin = false;\n          var displayName = 'NO NAME';\n          var email = 'NO EMAIL';\n          this.props.navigation.navigate('DashboardScreen', {\n            isLogin: _isLogin,\n            displayName: displayName,\n            email: email\n          });\n        }\n      }.bind(_assertThisInitialized(_this)));\n    };\n\n    return _this;\n  }\n\n  _createClass(LoadingScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('componentDidMount');\n      setTimeout(this.checkIfLoggedIn, 3000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: require(\"../images/AMANDA_LOGO.png\"),\n        style: {\n          resizeMode: 'stretch',\n          width: '40%',\n          height: '14%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }), React.createElement(ActivityIndicator, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return LoadingScreen;\n}(React.Component);\n\nexport { LoadingScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0BC904',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 24\n  }\n});","map":{"version":3,"sources":["E:/workspace/TestExpo/testApp13/components/LoadingScreen.js"],"names":["React","firebase","LoadingScreen","state","currentUser","checkIfLoggedIn","auth","onAuthStateChanged","user","console","log","isLogin","setState","uid","props","navigation","navigate","displayName","email","bind","setTimeout","styles","container","require","resizeMode","width","height","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","marginTop"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;;IAEqBC,a;;;;;;;;;;;;;;;UAOjBC,K,GAAQ;AAAEC,MAAAA,WAAW,EAAE;AAAf,K;;UASRC,e,GAAkB,YAAM;AACpBJ,MAAAA,QAAQ,CAACK,IAAT,GAAgBC,kBAAhB,CAAmC,UAASC,IAAT,EAAe;AAC9CC,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AACA,YAAGF,IAAH,EAAS;AACL,cAAMG,OAAO,GAAG,IAAhB;;AADK,+BAEmBV,QAAQ,CAACK,IAAT,EAFnB;AAAA,cAEGF,WAFH,kBAEGA,WAFH;;AAIL,eAAKQ,QAAL,CAAc;AAAER,YAAAA,WAAW,EAAXA;AAAF,WAAd;AAEAK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYN,WAAW,CAACS,GAAxB;AACA,eAAKC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,iBAA/B,EAAkD;AAC9CC,YAAAA,WAAW,EAAEb,WAAW,CAACa,WADqB;AAE9CC,YAAAA,KAAK,EAAEd,WAAW,CAACc,KAF2B;AAG9CP,YAAAA,OAAO,EAAEA;AAHqC,WAAlD;AAMH,SAdD,MAcO;AACH,cAAMA,QAAO,GAAG,KAAhB;AACA,cAAMM,WAAW,GAAG,SAApB;AACA,cAAMC,KAAK,GAAG,UAAd;AACA,eAAKJ,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,iBAA/B,EAAkD;AAC9CL,YAAAA,OAAO,EAAEA,QADqC;AAE9CM,YAAAA,WAAW,EAAEA,WAFiC;AAG9CC,YAAAA,KAAK,EAAEA;AAHuC,WAAlD;AAKH;AACJ,OA1BkC,CA0BjCC,IA1BiC,+BAAnC;AA2BH,K;;;;;;;wCAnCmB;AACZV,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAU,MAAAA,UAAU,CACN,KAAKf,eADC,EACgB,IADhB,CAAV;AAGP;;;6BAgCQ;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEgB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEC,OAAO,6BAAtB;AAAqD,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAE,SAAb;AAAwBC,UAAAA,KAAK,EAAE,KAA/B;AAAsCC,UAAAA,MAAM,EAAE;AAA9C,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,iBAAD;AAAmB,QAAA,IAAI,EAAG,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EArDsC1B,KAAK,CAAC2B,S;;SAA5BzB,a;AAwDrB,IAAMmB,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,SAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,SAAS,EAAE;AALF;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, ActivityIndicator, Image } from 'react-native';\r\nimport firebase from 'firebase';\r\n\r\nexport default class LoadingScreen extends React.Component {\r\n    /*\r\n    static navigationOptions = {\r\n        header: null,\r\n      };\r\n    */\r\n    \r\n    state = { currentUser: null}\r\n\r\n    componentDidMount() {\r\n            console.log('componentDidMount')\r\n            setTimeout(\r\n                this.checkIfLoggedIn, 3000\r\n            )\r\n    }\r\n\r\n    checkIfLoggedIn = () => {\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            console.log('checkIfLoggedIn first')\r\n            if(user) {\r\n                const isLogin = true\r\n                const { currentUser } = firebase.auth()\r\n                \r\n                this.setState({ currentUser })\r\n                \r\n                console.log('currentUser.uid')             \r\n                console.log(currentUser.uid)\r\n                this.props.navigation.navigate('DashboardScreen', {\r\n                    displayName: currentUser.displayName,\r\n                    email: currentUser.email,\r\n                    isLogin: isLogin,\r\n                });\r\n                \r\n            } else {\r\n                const isLogin = false\r\n                const displayName = 'NO NAME'\r\n                const email = 'NO EMAIL'\r\n                this.props.navigation.navigate('DashboardScreen', {\r\n                    isLogin: isLogin,\r\n                    displayName: displayName,\r\n                    email: email\r\n                })\r\n            }\r\n        }.bind(this));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <Image source={require('../images/AMANDA_LOGO.png')} style={{resizeMode: 'stretch', width: '40%', height: '14%'}}/>\r\n                <ActivityIndicator size = 'large' />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#0BC904',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 24,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}