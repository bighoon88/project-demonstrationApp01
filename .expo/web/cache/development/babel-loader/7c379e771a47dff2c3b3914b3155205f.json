{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\workspace\\\\TestExpo\\\\testApp13\\\\components\\\\MyPage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport firebase from 'firebase';\nvar ITEM_WIDTH = Dimensions.get('window').width;\n\nvar MyPage = function (_React$Component) {\n  _inherits(MyPage, _React$Component);\n\n  var _super = _createSuper(MyPage);\n\n  function MyPage() {\n    var _this;\n\n    _classCallCheck(this, MyPage);\n\n    _this = _super.call(this);\n\n    _this.isUserEqual = function (googleUser, firebaseUser) {\n      if (firebaseUser) {\n        var providerData = firebaseUser.providerData;\n\n        for (var i = 0; i < providerData.length; i++) {\n          if (providerData[i].providerId === firebase.auth.GoogleAuthProvider.PROVIDER_ID && providerData[i].uid === googleUser.getBasicProfile().getId()) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    };\n\n    _this.onSignIn = function (googleUser) {\n      console.log('Google Auth Response', googleUser);\n      var unsubscribe = firebase.auth().onAuthStateChanged(function (firebaseUser) {\n        unsubscribe();\n\n        if (!this.isUserEqual(googleUser, firebaseUser)) {\n          var credential = firebase.auth.GoogleAuthProvider.credential(googleUser.idToken, googleUser.accessToken);\n          firebase.auth().signInAndRetrieveDataWithCredential(credential).then(function (result) {\n            console.log('user signed in');\n\n            if (result.additionalUserInfo.isNewUser) {\n              firebase.database().ref('/users/' + result.user.uid).set({\n                gmail: result.user.email,\n                profile_picture: result.additionalUserInfo.profile.picture,\n                locale: result.additionalUserInfo.profile.locale,\n                first_name: result.additionalUserInfo.profile.given_name,\n                last_name: result.additionalUserInfo.profile.family_name,\n                created_at: Date.now(),\n                last_logged_in: Date.now()\n              }).then(function (snapshot) {});\n            } else {\n              firebase.database().ref('/users/' + result.user.uid).update({\n                last_logged_in: Date.now()\n              });\n            }\n          }).catch(function (error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            var email = error.email;\n            var credential = error.credential;\n          });\n        } else {\n          console.log('User already signed-in Firebase.');\n        }\n      }.bind(_assertThisInitialized(_this)));\n    };\n\n    _this.signInWithCoogleAsync = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Expo.Google.logInAsync({\n                behavior: 'web',\n                androidClientId: \"1009146587410-bh4neig0n7r4rkf7guk3vbclgu1gjmco.apps.googleusercontent.com\",\n                scopes: [\"profile\", \"email\"]\n              }));\n\n            case 3:\n              result = _context.sent;\n\n              if (!(result.type === 'success')) {\n                _context.next = 9;\n                break;\n              }\n\n              _this.onSignIn(result);\n\n              return _context.abrupt(\"return\", result.accessToken);\n\n            case 9:\n              return _context.abrupt(\"return\", {\n                cancelled: true\n              });\n\n            case 10:\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", {\n                error: true\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 12]], Promise);\n    };\n\n    console.ignoredYellowBox = ['Setting a timer'];\n    _this.state = {\n      GridListItems: [{\n        key: '0',\n        title: '내 자료',\n        image: require(\"../images/process.png\")\n      }, {\n        key: '1',\n        title: '뉴스레터',\n        image: require(\"../images/news.png\")\n      }, {\n        key: '2',\n        title: '경험데이터\\n분석',\n        image: require(\"../images/success.png\")\n      }, {\n        key: '3',\n        title: '포토북',\n        image: require(\"../images/gallery.png\")\n      }, {\n        key: '4',\n        title: '지식게임',\n        image: require(\"../images/owl.png\")\n      }, {\n        key: '5',\n        title: '결제문의',\n        image: require(\"../images/debit-card.png\")\n      }, {\n        key: '6',\n        title: '아만다\\n사용법',\n        image: require(\"../images/icons8-faq-80.png\")\n      }],\n      columns: 4\n    };\n    return _this;\n  }\n\n  _createClass(MyPage, [{\n    key: \"GetGridViewItem\",\n    value: function GetGridViewItem() {\n      Alert.alert('test service..');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var loginButton = React.createElement(Button, {\n        title: \"\\uB85C\\uADF8\\uC778\",\n        onPress: function onPress() {\n          return _this2.signInWithCoogleAsync();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      });\n      var logoutButton = React.createElement(Button, {\n        title: \"\\uB85C\\uADF8\\uC544\\uC6C3\",\n        onPress: function onPress() {\n          return firebase.auth().signOut();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 26\n        }\n      });\n      var message;\n\n      if (this.props.screenProps.isLogin) {\n        message = logoutButton;\n      } else {\n        message = loginButton;\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          marginLeft: 20,\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, \"\\uB354\\uBCF4\\uAE30\")), React.createElement(View, {\n        style: {\n          width: '100%',\n          height: 100,\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          paddingLeft: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          borderRadius: 40,\n          width: 63,\n          height: 63,\n          backgroundColor: '#ffbe04',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }\n      }, React.createElement(Image, {\n        source: require(\"../images/user.png\"),\n        style: {\n          width: 30,\n          height: 30,\n          tintColor: '#f7d985'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          alignItems: 'center',\n          paddingLeft: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 23\n        }\n      }, this.props.screenProps.displayName)), React.createElement(View, {\n        style: {\n          paddingTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 100,\n          height: 30,\n          backgroundColor: '#c0c0c0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 23\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          width: 100,\n          height: 30,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.GetGridViewItem();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 27\n        }\n      }, \"\\uCD94\\uC5B5\\uBCF4\\uAD00\\uD568\"))))))), React.createElement(View, {\n        style: {\n          paddingRight: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.GetGridViewItem();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"../images/settings-work-tool.png\"),\n        style: {\n          width: 20,\n          height: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }\n      }))))), React.createElement(View, {\n        style: {\n          width: '100%',\n          height: 40,\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingLeft: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }, \"\\uC544\\uB9CC\\uB2E4 \\uD3EC\\uC778\\uD2B8\")), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"../images/coin.png\"),\n        style: {\n          width: 20,\n          height: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: {\n          paddingRight: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 19\n        }\n      }, \"0\"))))), React.createElement(View, {\n        style: {\n          width: '100%',\n          height: 110,\n          justifyContent: 'center',\n          paddingLeft: 20,\n          paddingRight: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      }, \"\\uD3B8\\uC758\\uAE30\\uB2A5\")), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          paddingTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          alignItems: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.GetGridViewItem();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"../images/bus.png\"),\n        style: {\n          width: 30,\n          height: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 19\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 19\n        }\n      }, \"\\uCCB4\\uD5D8BUS\"))), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          alignItems: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.GetGridViewItem();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"../images/idea.png\"),\n        style: {\n          width: 30,\n          height: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 19\n        }\n      }, \"\\uADF8\\uB8F9\\uB9E4\\uCE6D\"))), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          alignItems: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.GetGridViewItem();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"../images/vlogger.png\"),\n        style: {\n          width: 30,\n          height: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 19\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 19\n        }\n      }, \"AR\\uCE74\\uB4DC\"))), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          alignItems: 'center'\n        },\n        onPress: function onPress() {\n          return _this2.GetGridViewItem();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"../images/audio.png\"),\n        style: {\n          width: 30,\n          height: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 19\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 19\n        }\n      }, \"\\uC624\\uB514\\uC624\\uD074\\uB9BD\"))))), React.createElement(View, {\n        style: {\n          width: '100%',\n          height: 240,\n          paddingTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          fontWeight: 'bold',\n          padding: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }\n      }, \"\\uBD80\\uAC00\\uAE30\\uB2A5\")), React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.GridListItems,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: {\n              alignItems: 'center',\n              height: 90,\n              width: ITEM_WIDTH / 4\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: {\n              alignItems: 'center',\n              height: 90,\n              width: ITEM_WIDTH / 4\n            },\n            onPress: function onPress() {\n              return _this2.GetGridViewItem();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 21\n            }\n          }, React.createElement(Image, {\n            source: item.image,\n            style: {\n              width: 30,\n              height: 30\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 23\n            }\n          }), React.createElement(Text, {\n            onPress: _this2.GetGridViewItem.bind(_this2, item.key),\n            style: {\n              textAlign: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 23\n            }\n          }, \" \", item.title, \" \")));\n        },\n        numColumns: this.state.columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }\n      }))), React.createElement(View, {\n        style: {\n          width: '100%',\n          backgroundColor: 'green',\n          height: 150,\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../images/\\uC560\\uB4DC\\uBC8C\\uB8EC.jpg\"),\n        style: {\n          width: '100%',\n          height: 150\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return MyPage;\n}(React.Component);\n\nMyPage.navigationOptions = {\n  header: null\n};\nexport { MyPage as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingTop: 24\n  },\n  GridViewContainer: {\n    alignItems: 'center',\n    height: 90,\n    width: ITEM_WIDTH / 4.4,\n    margin: 2\n  }\n});","map":{"version":3,"sources":["E:/workspace/TestExpo/testApp13/components/MyPage.js"],"names":["React","firebase","ITEM_WIDTH","Dimensions","get","width","MyPage","isUserEqual","googleUser","firebaseUser","providerData","i","length","providerId","auth","GoogleAuthProvider","PROVIDER_ID","uid","getBasicProfile","getId","onSignIn","console","log","unsubscribe","onAuthStateChanged","credential","idToken","accessToken","signInAndRetrieveDataWithCredential","then","result","additionalUserInfo","isNewUser","database","ref","user","set","gmail","email","profile_picture","profile","picture","locale","first_name","given_name","last_name","family_name","created_at","Date","now","last_logged_in","snapshot","update","catch","error","errorCode","code","errorMessage","message","bind","signInWithCoogleAsync","Expo","Google","logInAsync","behavior","androidClientId","scopes","type","cancelled","ignoredYellowBox","state","GridListItems","key","title","image","require","columns","Alert","alert","loginButton","logoutButton","signOut","props","screenProps","isLogin","styles","container","marginLeft","marginTop","fontSize","height","justifyContent","flexDirection","alignItems","paddingLeft","borderRadius","backgroundColor","tintColor","fontWeight","displayName","paddingTop","GetGridViewItem","paddingRight","padding","item","textAlign","Component","navigationOptions","header","StyleSheet","create","flex","GridViewContainer","margin"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, Button, Image, TouchableOpacity, FlatList, Alert, Dimensions, ScrollView } from 'react-native';\r\nimport firebase from 'firebase';\r\n\r\nconst ITEM_WIDTH = Dimensions.get('window').width\r\n\r\nexport default class MyPage extends React.Component {\r\n\r\n  static navigationOptions = {\r\n    header: null,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    console.ignoredYellowBox = [\r\n    'Setting a timer'\r\n    ];\r\n    this.state = {\r\n      GridListItems: [\r\n        {key: '0', title: '내 자료', image: require('../images/process.png')},\r\n        {key: '1', title: '뉴스레터', image: require('../images/news.png')},\r\n        {key: '2', title: '경험데이터\\n분석', image: require('../images/success.png')},\r\n        {key: '3', title: '포토북', image: require('../images/gallery.png')},\r\n        {key: '4', title: '지식게임', image: require('../images/owl.png')},\r\n        {key: '5', title: '결제문의', image: require('../images/debit-card.png')},\r\n        {key: '6', title: '아만다\\n사용법', image: require('../images/icons8-faq-80.png')}\r\n      ],\r\n      columns: 4\r\n    }\r\n  }\r\n\r\n  GetGridViewItem() {\r\n    Alert.alert('test service..');\r\n  }\r\n\r\n  // firbase 함수\r\n  isUserEqual = (googleUser, firebaseUser) => {\r\n    if (firebaseUser) {\r\n      var providerData = firebaseUser.providerData;\r\n      for (var i = 0; i < providerData.length; i++) {\r\n        if (providerData[i].providerId === firebase.auth.GoogleAuthProvider.PROVIDER_ID &&\r\n            providerData[i].uid === googleUser.getBasicProfile().getId()) {\r\n          // We don't need to reauth the Firebase connection.\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // firbase 함수\r\n  onSignIn = googleUser => {\r\n    console.log('Google Auth Response', googleUser);\r\n    // We need to register an Observer on Firebase Auth to make sure auth is initialized.\r\n    var unsubscribe = firebase.auth().onAuthStateChanged(function(firebaseUser) {\r\n      unsubscribe();\r\n      // Check if we are already signed-in Firebase with the correct user.\r\n      if (!this.isUserEqual(googleUser, firebaseUser)) {\r\n        // Build Firebase credential with the Google ID token.\r\n        var credential = firebase.auth.GoogleAuthProvider.credential(\r\n          googleUser.idToken,\r\n          googleUser.accessToken,\r\n        );\r\n        // Sign in with credential from the Google user.\r\n        firebase.auth().signInAndRetrieveDataWithCredential(credential).then(function(result){\r\n          console.log('user signed in');\r\n          if (result.additionalUserInfo.isNewUser) {\r\n            firebase.database().ref('/users/' + result.user.uid).set({\r\n              gmail: result.user.email,\r\n              profile_picture: result.additionalUserInfo.profile.picture,\r\n              locale: result.additionalUserInfo.profile.locale,\r\n              first_name: result.additionalUserInfo.profile.given_name,\r\n              last_name: result.additionalUserInfo.profile.family_name,\r\n              created_at: Date.now(),\r\n              last_logged_in:Date.now()\r\n            }).then(function (snapshot){\r\n              // console.log('snapshot', snapshot)\r\n            });\r\n          } else {\r\n            firebase.database().ref('/users/' + result.user.uid).update({\r\n              last_logged_in:Date.now()\r\n            })\r\n          }\r\n        }).catch(function(error) {\r\n          // Handle Errors here.\r\n          var errorCode = error.code;\r\n          var errorMessage = error.message;\r\n          // The email of the user's account used.\r\n          var email = error.email;\r\n          // The firebase.auth.AuthCredential type that was used.\r\n          var credential = error.credential;\r\n          // ...\r\n        });\r\n      } else {\r\n        console.log('User already signed-in Firebase.');\r\n      }\r\n    }.bind(this));\r\n  };\r\n\r\n  signInWithCoogleAsync = async () => {\r\n    try {\r\n        const result = await Expo.Google.logInAsync({\r\n            behavior: 'web',\r\n            androidClientId: \"1009146587410-bh4neig0n7r4rkf7guk3vbclgu1gjmco.apps.googleusercontent.com\",\r\n            scopes: [\"profile\", \"email\"]\r\n        })\r\n        if (result.type === 'success') {\r\n            this.onSignIn(result);\r\n            return result.accessToken;\r\n        } else  {\r\n          return { cancelled: true };\r\n        }\r\n    } catch (e) {\r\n        return { error: true }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const loginButton = <Button title='로그인' onPress={()=> this.signInWithCoogleAsync()} />\r\n    const logoutButton = <Button title='로그아웃' onPress={()=> firebase.auth().signOut()} />;\r\n    let message;\r\n    if (this.props.screenProps.isLogin) {\r\n      message = logoutButton\r\n    } else {\r\n      message = loginButton\r\n    }\r\n    return (\r\n      <View style={styles.container}>\r\n        <ScrollView>\r\n          <View style={{marginLeft: 20, marginTop: 20}}>\r\n            <Text style={{fontSize: 20}}>더보기</Text>\r\n          </View>\r\n          <View style={{width: '100%', height: 100, justifyContent: 'center'}}>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center'}}>\r\n              <View>\r\n                <View style={{flexDirection: 'row', paddingLeft: 20}}>\r\n                  <View style={{borderRadius: 40, width: 63, height: 63, backgroundColor: '#ffbe04', justifyContent: 'center', alignItems: 'center'}}>\r\n                    <Image source={require('../images/user.png')} style={{width: 30, height: 30, tintColor: '#f7d985'}}/>\r\n                  </View>\r\n                  <View style={{alignItems: 'center', paddingLeft: 10}}>\r\n                    <View>\r\n                      <Text style={{fontSize: 15, fontWeight: 'bold'}}>{this.props.screenProps.displayName}</Text>\r\n                    </View>\r\n                    <View style={{paddingTop: 5}}>\r\n                      <View style={{width: 100, height: 30, backgroundColor: '#c0c0c0'}}>\r\n                        <TouchableOpacity style={{width: 100, height: 30, justifyContent: 'center', alignItems: 'center'}} onPress={()=> this.GetGridViewItem()} >\r\n                          <Text style={{fontSize: 15}}>추억보관함</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n              <View style={{paddingRight: 25}}>\r\n                <TouchableOpacity onPress={()=> this.GetGridViewItem()}>\r\n                  <Image source={require('../images/settings-work-tool.png')} style={{width: 20, height: 20}}/>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View style={{width: '100%', height: 40, justifyContent: 'center'}}>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between'}}>\r\n              <View style={{paddingLeft: 20}}>\r\n                <Text style={{fontSize: 15}}>아만다 포인트</Text>\r\n              </View>\r\n              <View style={{flexDirection: 'row'}}>\r\n                <View style={{paddingRight: 5}}>\r\n                  <Image source={require('../images/coin.png')} style={{width: 20, height: 20}}/>\r\n                </View>\r\n                <View style={{paddingRight: 20}}>\r\n                  <Text style={{fontSize: 15, fontWeight: 'bold'}}>0</Text>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View style={{width: '100%', height: 110, justifyContent: 'center', paddingLeft: 20, paddingRight: 20, }}>\r\n            <View>\r\n              <Text style={{fontSize: 15, fontWeight: 'bold'}}>편의기능</Text>\r\n            </View>\r\n            <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingTop: 10}}>\r\n              <View>\r\n                <TouchableOpacity style={{alignItems: 'center'}} onPress={()=> this.GetGridViewItem()}>\r\n                  <Image source={require('../images/bus.png')} style={{width: 30, height: 30}}/>\r\n                  <Text>체험BUS</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n              <View>\r\n                <TouchableOpacity style={{alignItems: 'center'}} onPress={()=> this.GetGridViewItem()}>\r\n                  <Image source={require('../images/idea.png')} style={{width: 30, height: 30}}/>\r\n                  <Text>그룹매칭</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n              <View>\r\n                <TouchableOpacity style={{alignItems: 'center'}} onPress={()=> this.GetGridViewItem()}>\r\n                  <Image source={require('../images/vlogger.png')} style={{width: 30, height: 30}}/>\r\n                  <Text>AR카드</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n              <View>\r\n                <TouchableOpacity style={{alignItems: 'center'}} onPress={()=> this.GetGridViewItem()}>\r\n                  <Image source={require('../images/audio.png')} style={{width: 30, height: 30}}/>\r\n                  <Text>오디오클립</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View style={{width: '100%', height:240, paddingTop: 10}}>\r\n            <View>\r\n              <Text style={{fontSize: 15, fontWeight: 'bold', padding: 20}}>부가기능</Text>\r\n            </View>\r\n            <View style={{justifyContent: 'center', alignItems: 'center'}}>\r\n              <FlatList\r\n                data={ this.state.GridListItems }\r\n                renderItem={ ({item}) =>\r\n                  <View style={{alignItems: 'center', height: 90, width: ITEM_WIDTH/4}}>\r\n                    <TouchableOpacity style={{alignItems: 'center', height: 90, width: ITEM_WIDTH/4}} onPress={()=> this.GetGridViewItem()}>\r\n                      <Image source={item.image} style={{width: 30, height: 30}}/>\r\n                      <Text onPress={this.GetGridViewItem.bind(this, item.key)} style={{textAlign: 'center'}} > {item.title} </Text>\r\n                    </TouchableOpacity>\r\n                  </View> }\r\n                numColumns={this.state.columns}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={{width: '100%', backgroundColor: 'green', height: 150, justifyContent: 'center'}}>\r\n            <Image source={require('../images/애드벌룬.jpg')} style={{width: '100%', height: 150}}/>\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    paddingTop: 24\r\n  },\r\n  GridViewContainer: {\r\n    alignItems: 'center',\r\n    height: 90,\r\n    width: ITEM_WIDTH/4.4,\r\n    margin: 2,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}