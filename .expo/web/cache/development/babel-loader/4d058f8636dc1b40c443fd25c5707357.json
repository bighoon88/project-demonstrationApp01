{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\workspace\\\\TestExpo\\\\testApp13\\\\components\\\\DashboardScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from 'firebase';\n\nvar DashboardScreen = function (_React$Component) {\n  _inherits(DashboardScreen, _React$Component);\n\n  var _super = _createSuper(DashboardScreen);\n\n  function DashboardScreen() {\n    _classCallCheck(this, DashboardScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DashboardScreen, [{\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      var displyName = navigation.getParam('displayName', 'NO NAME');\n      var email = navigation.getParam('email', 'NO EMAIL');\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, \"DashboardScreen!\"), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, displyName), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }, email), React.createElement(Button, {\n        title: \"\\uB85C\\uADF8\\uC544\\uC6C3\",\n        onPress: function onPress() {\n          return firebase.auth().signOut();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return DashboardScreen;\n}(React.Component);\n\nexport { DashboardScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["E:/workspace/TestExpo/testApp13/components/DashboardScreen.js"],"names":["React","firebase","DashboardScreen","navigation","props","displyName","getParam","email","styles","container","auth","signOut","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;;IAIqBC,e;;;;;;;;;;;;;6BACV;AAAA,UACCC,UADD,GACgB,KAAKC,KADrB,CACCD,UADD;AAEP,UAAME,UAAU,GAAGF,UAAU,CAACG,QAAX,CAAoB,aAApB,EAAmC,SAAnC,CAAnB;AACA,UAAMC,KAAK,GAAGJ,UAAU,CAACG,QAAX,CAAoB,OAApB,EAA6B,UAA7B,CAAd;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,EAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOJ,UAAP,CAFA,EAGA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOE,KAAP,CAHA,EAIA,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,0BAAd;AAAqB,QAAA,OAAO,EAAE;AAAA,iBAAIN,QAAQ,CAACS,IAAT,GAAgBC,OAAhB,EAAJ;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJA,CADF;AAQD;;;;EAd0CX,KAAK,CAACY,S;;SAA9BV,e;AAiBrB,IAAMM,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, Button } from 'react-native';\r\nimport firebase from 'firebase';\r\n\r\n\r\n\r\nexport default class DashboardScreen extends React.Component {\r\n  render() {\r\n    const { navigation } = this.props;\r\n    const displyName = navigation.getParam('displayName', 'NO NAME');\r\n    const email = navigation.getParam('email', 'NO EMAIL')\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n      <Text>DashboardScreen!</Text>\r\n      <Text>{displyName}</Text>\r\n      <Text>{email}</Text>\r\n      <Button title='로그아웃' onPress={()=>firebase.auth().signOut()} />\r\n    </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}